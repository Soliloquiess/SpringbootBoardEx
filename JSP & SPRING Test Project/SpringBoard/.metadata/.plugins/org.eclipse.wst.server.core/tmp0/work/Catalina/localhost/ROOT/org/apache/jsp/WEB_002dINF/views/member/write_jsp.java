/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2022-08-09 18:53:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class write_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원 가입 폼</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\r\n");
      out.write("\t\t// id중복체크 변수, 비밀번호와 비밀범호 확인이 같은지 체크 변수 -> 전역 변수 선언\r\n");
      out.write("\t\tvar idCheck = false;\r\n");
      out.write("\t\tvar pwCheck = false;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// datepicker 클래스 이벤트 - 적정한 옵션을 넣어서 초기화 시켜 준다. 기본 datepicker()로 사용 가능\r\n");
      out.write("\t\t$(\".datepicker\").datepicker(\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\tchangeMonth : true,\r\n");
      out.write("\t\t\t\t\tchangeYear : true,\r\n");
      out.write("\t\t\t\t\tdateFormat : \"yy-mm-dd\",\r\n");
      out.write("\t\t\t\t\tdayNamesMin : [ \"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\" ],\r\n");
      out.write("\t\t\t\t\tmonthNamesShort : [ \"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\",\r\n");
      out.write("\t\t\t\t\t\t\t\"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\" ]\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar now = new Date();\r\n");
      out.write("\t\tvar startYear = now.getFullYear();\r\n");
      out.write("\t\tvar yearRange = (startYear - 100) + \":\" + startYear;\r\n");
      out.write("\t\t// datepicker - 초기값으로 셋팅하는 방법을 사용하면 2번째는 무시 당한다.\r\n");
      out.write("\t\t//원래 있던 datepicker에 option을 추가하는 방법이다.\r\n");
      out.write("\t\t$(\".datepicker\").datepicker(\"option\", {\r\n");
      out.write("\t\t\t\"maxDate\" : new Date(),\r\n");
      out.write("\t\t\t\"yearRange\" : yearRange\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t// \t\t   $( \".datepicker\" ).datepicker();\r\n");
      out.write("\r\n");
      out.write("\t\t// 아이디 체크 이벤트\r\n");
      out.write("\t\t$(\"#id\").keyup(function() {\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tidCheck = false;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar id = $(\"#id\").val();\r\n");
      out.write("\t\t\t// 공백문자 처리\r\n");
      out.write("\t\t\tid = $.trim(id);\r\n");
      out.write("\t\t\t$(\"#id\").val(id);\r\n");
      out.write("\t\t\t// alert(\"입력한 아이디 : \" + id);\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 4자 미만 처리\r\n");
      out.write("\t\t\tif (id.length < 4) {\r\n");
      out.write("\t\t\t\t$(\"#idCheckDiv\").removeClass(\"alert-success\");\r\n");
      out.write("\t\t\t\t$(\"#idCheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("\t\t\t\t$(\"#idCheckDiv\").text(\"아이디는 4자 이상 영숫자이여야 합니다.\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 20자 초과\r\n");
      out.write("\t\t\tif (id.length > 20) {\r\n");
      out.write("\t\t\t\t$(\"#idCheckDiv\").removeClass(\"alert-success\");\r\n");
      out.write("\t\t\t\t$(\"#idCheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("\t\t\t\t$(\"#idCheckDiv\").text(\"아이디는 20자 이내 영숫자이여야 합니다.\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 4~20 사이 아이디인 경우 - 중복 체크하러 간다. -> 서버로 간다. URL필요 -> 화면에 다른 데이터는 변하지 않으면서 일부 처리에 필요한 데이터만 변경 URL은 변경이 없다. ->Ajax\r\n");
      out.write("\t\t\t// 중복안된 경우(아이디가 null인 경우) - 사용가능한 아이디 입니다., 중복이된 경우(아이디가 null이 아닌 경우) - 중복된 아이디입니다. -> 서버에서 처리\r\n");
      out.write("\t\t\t// /member/idCheck -> *.do:sitemesh 위 아래 메뉴와 카피라이트가 붙는다.\r\n");
      out.write("\t\t\t// result -> 서버에서 전달해 주는 데이터\r\n");
      out.write("\t\t\t$(\"#idCheckDiv\").load(\"/member/idCheck?id=\" + id, function(result) {\r\n");
      out.write("\t\t\t\t// 결과에 따른 배경색 처리\r\n");
      out.write("\t\t\t\t// alert(result);\r\n");
      out.write("\t\t\t\t// 클래스 다 지우기\r\n");
      out.write("\t\t\t\t$(\"#idCheckDiv\").removeClass(\"alert-success alert-danger\");\r\n");
      out.write("\t\t\t\tif (result.indexOf(\"가능한\") == -1) {\r\n");
      out.write("\t\t\t\t\t// 중복된 아이디인 경우 배경은 빨간색\r\n");
      out.write("\t\t\t\t\t$(\"#idCheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("\t\t\t\t\tidCheck = false;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t// 사용가능한 아이디인 경우 배경은 파란색\r\n");
      out.write("\t\t\t\t\t$(\"#idCheckDiv\").addClass(\"alert-success\");\r\n");
      out.write("\t\t\t\t\tidCheck = true;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t}); //$(\"#id\").keyup() 이벤트의 끝\r\n");
      out.write("\r\n");
      out.write("\t\t// 비밀번호 처리 이벤트\r\n");
      out.write("\t\t$(\"#pw\").keyup(function() {\r\n");
      out.write("\t\t\tpwCheck = false;\r\n");
      out.write("\t\t\t// $(this) == $(\"#pw\")\r\n");
      out.write("\t\t\tvar pw = $(this).val();\r\n");
      out.write("\t\t\t//alert(pw.length);\r\n");
      out.write("\t\t\t// 4자 미만 처리\r\n");
      out.write("\t\t\tif (pw.length < 4) {\r\n");
      out.write("\t\t\t\t$(\"#pwCheckDiv\").removeClass(\"alert-success\");\r\n");
      out.write("\t\t\t\t$(\"#pwCheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("\t\t\t\t$(\"#pwCheckDiv\").text(\"비밀번호는 4자 이상이여야 합니다.\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 20자 초과 처리\r\n");
      out.write("\t\t\tif (pw.length > 20) {\r\n");
      out.write("\t\t\t\t$(\"#pwCheckDiv\").removeClass(\"alert-success\");\r\n");
      out.write("\t\t\t\t$(\"#pwCheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("\t\t\t\t$(\"#pwCheckDiv\").text(\"비밀번호는 20자 이내이여야 합니다.\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 4~20 사이 pw2와 같은지 체크\r\n");
      out.write("\t\t\tvar pw2 = $(\"#pw2\").val();\r\n");
      out.write("\t\t\tif (pw == pw2) {\r\n");
      out.write("\t\t\t\t// 비밀번호와 비밀번호 확인이 같은 경우\r\n");
      out.write("\t\t\t\t$(\"#pwCheckDiv, #pw2CheckDiv\").removeClass(\"alert-danger\");\r\n");
      out.write("\t\t\t\t$(\"#pwCheckDiv, #pw2CheckDiv\").addClass(\"alert-success\");\r\n");
      out.write("\t\t\t\t$(\"#pwCheckDiv, #pw2CheckDiv\").text(\"적당한 비밀번호입니다.\");\r\n");
      out.write("\t\t\t\tpwCheck = true;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t// 비밀번호와 비밀번호 확인이 같지 않은 경우\r\n");
      out.write("\t\t\t\t$(\"#pwCheckDiv, #pw2CheckDiv\").removeClass(\"alert-success\");\r\n");
      out.write("\t\t\t\t$(\"#pwCheckDiv, #pw2CheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("\t\t\t\t$(\"#pwCheckDiv\").text(\"비밀번호와 비밀번호 확인은 같아야 합니다.\");\r\n");
      out.write("\t\t\t\tif (pw2.length < 4)\r\n");
      out.write("\t\t\t\t\t$(\"#pw2CheckDiv\").text(\"비밀번호확인은 4자 이상이여야 합니다.\");\r\n");
      out.write("\t\t\t\telse if (pw2.length > 20)\r\n");
      out.write("\t\t\t\t\t$(\"#pw2CheckDiv\").text(\"비밀번호 확인은 20자 이내이여야 합니다.\");\r\n");
      out.write("\t\t\t\telse\r\n");
      out.write("\t\t\t\t\t$(\"#pw2CheckDiv\").text(\"비밀번호와 비밀번호 확인은 같아야 합니다.\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t// 비밀번호 확인 처리 이벤트\r\n");
      out.write("\t\t$(\"#pw2\").keyup(function() {\r\n");
      out.write("\t\t\tpwCheck = false;\r\n");
      out.write("\r\n");
      out.write("\t\t\t// $(this) == $(\"#pw2\")\r\n");
      out.write("\t\t\tvar pw2 = $(this).val();\r\n");
      out.write("\t\t\t//alert(pw2.length);\r\n");
      out.write("\t\t\t// 4자 미만 처리\r\n");
      out.write("\t\t\tif (pw2.length < 4) {\r\n");
      out.write("\t\t\t\t$(\"#pw2CheckDiv\").removeClass(\"alert-success\");\r\n");
      out.write("\t\t\t\t$(\"#pw2CheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("\t\t\t\t$(\"#pw2CheckDiv\").text(\"비밀번호확인은 4자 이상이여야 합니다.\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 20자 초과 처리\r\n");
      out.write("\t\t\tif (pw2.length > 20) {\r\n");
      out.write("\t\t\t\t$(\"#pw2CheckDiv\").removeClass(\"alert-success\");\r\n");
      out.write("\t\t\t\t$(\"#pw2CheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("\t\t\t\t$(\"#pw2CheckDiv\").text(\"비밀번호 확인은 20자 이내이여야 합니다.\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 4~20 사이 pw와 같은지 체크\r\n");
      out.write("\t\t\tvar pw = $(\"#pw\").val();\r\n");
      out.write("\t\t\tif (pw == pw2) {\r\n");
      out.write("\t\t\t\t// 비밀번호와 비밀번호 확인이 같은 경우\r\n");
      out.write("\t\t\t\t$(\"#pw2CheckDiv, #pwCheckDiv\").removeClass(\"alert-danger\");\r\n");
      out.write("\t\t\t\t$(\"#pw2CheckDiv, #pwCheckDiv\").addClass(\"alert-success\");\r\n");
      out.write("\t\t\t\t$(\"#pw2CheckDiv, #pwCheckDiv\").text(\"적당한 비밀번호입니다.\");\r\n");
      out.write("\t\t\t\tpwCheck = true;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t// 비밀번호와 비밀번호 확인이 같지 않은 경우\r\n");
      out.write("\t\t\t\t$(\"#pwCheckDiv, #pw2CheckDiv\").removeClass(\"alert-success\");\r\n");
      out.write("\t\t\t\t$(\"#pwCheckDiv, #pw2CheckDiv\").addClass(\"alert-danger\");\r\n");
      out.write("\t\t\t\t$(\"#pw2CheckDiv\").text(\"비밀번호와 비밀번호 확인은 같아야 합니다.\");\r\n");
      out.write("\t\t\t\tif (pw.length < 4)\r\n");
      out.write("\t\t\t\t\t$(\"#pwCheckDiv\").text(\"비밀번호확인은 4자 이상이여야 합니다.\");\r\n");
      out.write("\t\t\t\telse if (pw.length > 20)\r\n");
      out.write("\t\t\t\t\t$(\"#pwCheckDiv\").text(\"비밀번호 확인은 20자 이내이여야 합니다.\");\r\n");
      out.write("\t\t\t\telse\r\n");
      out.write("\t\t\t\t\t$(\"#pwCheckDiv\").text(\"비밀번호와 비밀번호 확인은 같아야 합니다.\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t// 비밀번호 처리 이벤트의 끝\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 회원 가입 이벤트\r\n");
      out.write("\t\t$(\"#writeForm\").submit(function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// alert(\"아이디 체크 : \" + idCheck + \"\\n비밀번호 체크 : \" + pwCheck);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 아이디 중복체크 - 사용 가능한 아이디 인지 확인\r\n");
      out.write("\t\t\tif(!idCheck){\r\n");
      out.write("\t\t\t\talert(\"중복이 되지 않는 적당한 형식의 아이디를 사용하셔야만 합니다.\");\r\n");
      out.write("\t\t\t\t$(\"#id\").focus();\r\n");
      out.write("\t\t\t\t// form 전송을 무시시킨다.\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// 비밀번호와 비밀번호 확인\r\n");
      out.write("\t\t\tif(!pwCheck){\r\n");
      out.write("\t\t\t\talert(\"비밀번호와 비밀번호 확인의 길이가 4~20이여야 하고 같아야 합니다.\");\r\n");
      out.write("\t\t\t\t$(\"#pw\").focus();\r\n");
      out.write("\t\t\t\t// form 전송을 무시시킨다.\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// form 전송을 무시시킨다. -> 나중에 꼭 주석처리해야만 한다.\r\n");
      out.write("\t\t\t// return false;\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t});// $(function(){}) 의 끝\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<h2>회원 가입 폼</h2>\r\n");
      out.write("\t\t<form action=\"write.do\" method=\"post\" enctype=\"multipart/form-data\" id=\"writeForm\">\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"id\">아이디</label> <input id=\"id\" name=\"id\"\r\n");
      out.write("\t\t\t\t\tclass=\"form-control\" required=\"required\"\r\n");
      out.write("\t\t\t\t\tpattern=\"[A-Za-z0-9]{4,20}\" placeholder=\"아이디 입력\" autocomplete=\"off\">\r\n");
      out.write("\t\t\t\t<div class=\"alert alert-danger\" id=\"idCheckDiv\">아이디는 4자 이상의\r\n");
      out.write("\t\t\t\t\t영숫자를 입력하셔야 합니다.</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"pw\">비밀번호</label> <input id=\"pw\" name=\"pw\"\r\n");
      out.write("\t\t\t\t\tclass=\"form-control\" required=\"required\" pattern=\".{4,20}\"\r\n");
      out.write("\t\t\t\t\tplaceholder=\"비밀번호 입력\" type=\"password\">\r\n");
      out.write("\t\t\t\t<div id=\"pwCheckDiv\" class=\"alert alert-danger\">비밀번호는 4자\r\n");
      out.write("\t\t\t\t\t이상이여야합니다.</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"pw2\">비밀번호 확인</label> <input id=\"pw2\" name=\"pw2\"\r\n");
      out.write("\t\t\t\t\tclass=\"form-control\" required=\"required\" pattern=\".{4,20}\"\r\n");
      out.write("\t\t\t\t\tplaceholder=\"비밀번호 확인 입력\" type=\"password\">\r\n");
      out.write("\t\t\t\t<div id=\"pw2CheckDiv\" class=\"alert alert-danger\">비밀번호는 4자\r\n");
      out.write("\t\t\t\t\t이상이여야합니다.</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"name\">이름</label> <input id=\"name\" name=\"name\"\r\n");
      out.write("\t\t\t\t\tclass=\"form-control\" required=\"required\" pattern=\"[가-힣]{2,10}\"\r\n");
      out.write("\t\t\t\t\tplaceholder=\"이름 입력\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label>성별</label>\r\n");
      out.write("\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t<label class=\"radio-inline\"><input name=\"gender\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"radio\" value=\"남자\" checked=\"checked\">남자</label> <label\r\n");
      out.write("\t\t\t\t\t\tclass=\"radio-inline\"><input name=\"gender\" type=\"radio\"\r\n");
      out.write("\t\t\t\t\t\tvalue=\"여자\">여자</label>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"birth\">생년월일</label> <input id=\"birth\" name=\"birth\"\r\n");
      out.write("\t\t\t\t\tclass=\"form-control datepicker\" required=\"required\" placeholder=\"yyyy-mm-dd\"\r\n");
      out.write("\t\t\t\t\tautocomplete=\"off\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"tel\">연락처</label> <input id=\"tel\" name=\"tel\"\r\n");
      out.write("\t\t\t\t\tclass=\"form-control\" placeholder=\"연락처 입력\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"email\">이메일</label> <input id=\"email\" name=\"email\"\r\n");
      out.write("\t\t\t\t\tclass=\"form-control\" required=\"required\" placeholder=\"이메일 입력\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"phtoFile\">본인사진</label> <input id=\"photoFile\"\r\n");
      out.write("\t\t\t\t\tname=\"photoFile\" type=\"file\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<button>가입</button>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
